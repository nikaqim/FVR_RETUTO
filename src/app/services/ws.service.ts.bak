import { Injectable } from '@angular/core';
import { BehaviorSubject, Observable } from 'rxjs';
import { WebSocketSubject, webSocket } from 'rxjs/webSocket';

@Injectable({ providedIn: 'root' })
export class WsService {
    private socket$!: WebSocketSubject<any>;
    private readonly socketUrl = 'ws://localhost:8080';

    constructor() {
        this.connectWs();
    }

    private connectWs(){
        console.log('connecting to ws...');
        this.socket$ = webSocket(this.socketUrl);

        this.socket$.subscribe({
            next: (msg) => console.log('Received:', msg),
            error: (err) => console.error('WebSocket error:', err),
            complete: () => {
                console.warn('WebSocket closed. Reconnecting...');
                setTimeout(() => this.connectWs(), 3000); // âœ… Auto-reconnect
            }
        })
    }

    sendMessage(event:string, message:any) {
        this.socket$.next({event, message});
    }

    listen() {
        return this.socket$.asObservable();
    }

    disconnect() {
        this.socket$.complete();
    }
}